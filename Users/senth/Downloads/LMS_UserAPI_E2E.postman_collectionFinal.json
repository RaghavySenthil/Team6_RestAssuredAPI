{
	"info": {
		"_postman_id": "0c109ab0-010f-4cdd-b5eb-23e92ef79cc5",
		"name": "LMS_UserAPI E2E",
		"description": "LMS REST API Documentation\n\nContact Support:\n Name: LMs\n Email: lms@gmail.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26211004"
	},
	"item": [
		{
			"name": "login",
			"item": [
				{
					"name": "User Sign In",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responsedata = pm.response.json();",
									"if(responsedata.token !== null || responsedata.token !== undefined)",
									"{",
									"token = responsedata.token;",
									"pm.environment.set(\"Token\",token);",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"}",
									"else",
									"{",
									"    pm.test(\"UnAuthorized 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var userLoginEmailId = pm.environment.get(\"userLoginEmailId\");",
									"var adminpassword = pm.environment.get(\"adminpassword\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{adminpassword}}\",\n  \"userLoginEmailId\": \"{{userLoginEmailId}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"<string>\",\n  \"userLoginEmailId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"email\": \"<string>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"status\": \"<string>\",\n  \"token\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "allPrograms",
			"item": [
				{
					"name": "Get all Programs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/allPrograms",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"allPrograms"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/allPrograms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allPrograms"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "allProgramsWithUsers",
			"item": [
				{
					"name": "Get all Programs along with users in each program",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/allProgramsWithUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"allProgramsWithUsers"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/allProgramsWithUsers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allProgramsWithUsers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"creationTime\": {\n      \"date\": \"<integer>\",\n      \"day\": \"<integer>\",\n      \"hours\": \"<integer>\",\n      \"minutes\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"nanos\": \"<integer>\",\n      \"seconds\": \"<integer>\",\n      \"time\": \"<long>\",\n      \"timezoneOffset\": \"<integer>\",\n      \"year\": \"<integer>\"\n    },\n    \"lastModTime\": {\n      \"date\": \"<integer>\",\n      \"day\": \"<integer>\",\n      \"hours\": \"<integer>\",\n      \"minutes\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"nanos\": \"<integer>\",\n      \"seconds\": \"<integer>\",\n      \"time\": \"<long>\",\n      \"timezoneOffset\": \"<integer>\",\n      \"year\": \"<integer>\"\n    },\n    \"programDescription\": \"<string>\",\n    \"programId\": \"<long>\",\n    \"programName\": \"<string>\",\n    \"programStatus\": \"<string>\",\n    \"programUsers\": [\n      {\n        \"userComments\": \"<string>\",\n        \"userEduPg\": \"<string>\",\n        \"userEduUg\": \"<string>\",\n        \"userFirstName\": \"<string>\",\n        \"userId\": \"<string>\",\n        \"userLastName\": \"<string>\",\n        \"userLinkedinUrl\": \"<string>\",\n        \"userLocation\": \"<string>\",\n        \"userLoginEmail\": \"<string>\",\n        \"userMiddleName\": \"<string>\",\n        \"userPhoneNumber\": \"<long>\",\n        \"userTimeZone\": \"<string>\",\n        \"userVisaStatus\": \"<string>\"\n      },\n      {\n        \"userComments\": \"<string>\",\n        \"userEduPg\": \"<string>\",\n        \"userEduUg\": \"<string>\",\n        \"userFirstName\": \"<string>\",\n        \"userId\": \"<string>\",\n        \"userLastName\": \"<string>\",\n        \"userLinkedinUrl\": \"<string>\",\n        \"userLocation\": \"<string>\",\n        \"userLoginEmail\": \"<string>\",\n        \"userMiddleName\": \"<string>\",\n        \"userPhoneNumber\": \"<long>\",\n        \"userTimeZone\": \"<string>\",\n        \"userVisaStatus\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"creationTime\": {\n      \"date\": \"<integer>\",\n      \"day\": \"<integer>\",\n      \"hours\": \"<integer>\",\n      \"minutes\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"nanos\": \"<integer>\",\n      \"seconds\": \"<integer>\",\n      \"time\": \"<long>\",\n      \"timezoneOffset\": \"<integer>\",\n      \"year\": \"<integer>\"\n    },\n    \"lastModTime\": {\n      \"date\": \"<integer>\",\n      \"day\": \"<integer>\",\n      \"hours\": \"<integer>\",\n      \"minutes\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"nanos\": \"<integer>\",\n      \"seconds\": \"<integer>\",\n      \"time\": \"<long>\",\n      \"timezoneOffset\": \"<integer>\",\n      \"year\": \"<integer>\"\n    },\n    \"programDescription\": \"<string>\",\n    \"programId\": \"<long>\",\n    \"programName\": \"<string>\",\n    \"programStatus\": \"<string>\",\n    \"programUsers\": [\n      {\n        \"userComments\": \"<string>\",\n        \"userEduPg\": \"<string>\",\n        \"userEduUg\": \"<string>\",\n        \"userFirstName\": \"<string>\",\n        \"userId\": \"<string>\",\n        \"userLastName\": \"<string>\",\n        \"userLinkedinUrl\": \"<string>\",\n        \"userLocation\": \"<string>\",\n        \"userLoginEmail\": \"<string>\",\n        \"userMiddleName\": \"<string>\",\n        \"userPhoneNumber\": \"<long>\",\n        \"userTimeZone\": \"<string>\",\n        \"userVisaStatus\": \"<string>\"\n      },\n      {\n        \"userComments\": \"<string>\",\n        \"userEduPg\": \"<string>\",\n        \"userEduUg\": \"<string>\",\n        \"userFirstName\": \"<string>\",\n        \"userId\": \"<string>\",\n        \"userLastName\": \"<string>\",\n        \"userLinkedinUrl\": \"<string>\",\n        \"userLocation\": \"<string>\",\n        \"userLoginEmail\": \"<string>\",\n        \"userMiddleName\": \"<string>\",\n        \"userPhoneNumber\": \"<long>\",\n        \"userTimeZone\": \"<string>\",\n        \"userVisaStatus\": \"<string>\"\n      }\n    ]\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "saveprogram",
			"item": [
				{
					"name": "Create Program",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.text())",
									"{",
									"var responsedata = pm.response.json();",
									"if(responsedata.programId === undefined) programId=null;",
									"if(responsedata.programId !== null || responsedata.programId !== undefined)",
									"{",
									"    pm.collectionVariables.set(\"programId\",responsedata.programId);",
									"    pm.collectionVariables.set(\"programName\",responsedata.programName);",
									"    pm.collectionVariables.set(\"programStatus\",responsedata.programStatus);",
									"    pm.collectionVariables.set(\"programDescription\",responsedata.programDescription);",
									"    pm.test(\"New Program created Successfully 201 \", function () {",
									"        pm.response.to.have.status(201);",
									"    });",
									"}",
									"else{",
									"    //pm.cookies.clear();",
									"    postman.setNextRequest(\"Get All roles\");",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"teamName = pm.collectionVariables.get(\"teamName\");",
									"var programNumber = pm.collectionVariables.get(\"serialNumber\");",
									"var iterationData = pm.iterationData.toObject();",
									"var programName = iterationData.programName;",
									"console.log(\"programName from file: \"+programName);",
									"if(programNumber== undefined || programNumber ===null) programNumber = 50;",
									"else",
									"{",
									"programNumber++;",
									"serialNumber = programNumber.toString().padStart(3,'0');",
									"pm.collectionVariables.set(\"serialNumber\",serialNumber);",
									"console.log(\"serialNumber\"+serialNumber);",
									"updateprogramName = 'March24-'+`${teamName}-${programName}-${serialNumber}`;",
									"pm.iterationData.set(\"programName\",updateprogramName);",
									"pm.collectionVariables.set(\"update_programName\",updateprogramName);",
									"console.log(\"UpdatedValue:\"+pm.iterationData.get(\"programName\"));",
									"var requestbody = {",
									"    \"programDescription\" : pm.iterationData.get(\"programDescription\"),",
									"    \"programName\" : pm.iterationData.get(\"programName\"),",
									"    \"programStatus\" : pm.iterationData.get(\"programStatus\")",
									"};",
									"pm.request.body.update(JSON.stringify(requestbody));",
									"console.log(pm.request.body.toString());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\n  \"programDescription\": \"{{programDescription}}\",\n  \"programName\": \"{{programName}}\",\n  \"programStatus\": \"{{programStatus}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/saveprogram",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"saveprogram"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"creationTime\": {\n    \"date\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"hours\": \"<integer>\",\n    \"minutes\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"nanos\": \"<integer>\",\n    \"seconds\": \"<integer>\",\n    \"time\": \"<long>\",\n    \"timezoneOffset\": \"<integer>\",\n    \"year\": \"<integer>\"\n  },\n  \"lastModTime\": {\n    \"date\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"hours\": \"<integer>\",\n    \"minutes\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"nanos\": \"<integer>\",\n    \"seconds\": \"<integer>\",\n    \"time\": \"<long>\",\n    \"timezoneOffset\": \"<integer>\",\n    \"year\": \"<integer>\"\n  },\n  \"programDescription\": \"<string>\",\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\",\n  \"programStatus\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saveprogram",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saveprogram"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "getprogramsbyID",
			"item": [
				{
					"name": "{programId}",
					"item": [
						{
							"name": "Get Program by Program ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*var programId = pm.collectionVariables.get(\"programId\");",
											"if(programId !== null)",
											"{",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"}",
											"else",
											"{",
											"",
											"    pm.test(\"Status code is 404\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"}*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/programs/:programId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"programs",
										":programId"
									],
									"variable": [
										{
											"key": "programId",
											"value": "{{programId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/programs/:programId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"programs",
												":programId"
											],
											"variable": [
												{
													"key": "programId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"creationTime\": {\n    \"date\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"hours\": \"<integer>\",\n    \"minutes\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"nanos\": \"<integer>\",\n    \"seconds\": \"<integer>\",\n    \"time\": \"<long>\",\n    \"timezoneOffset\": \"<integer>\",\n    \"year\": \"<integer>\"\n  },\n  \"lastModTime\": {\n    \"date\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"hours\": \"<integer>\",\n    \"minutes\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"nanos\": \"<integer>\",\n    \"seconds\": \"<integer>\",\n    \"time\": \"<long>\",\n    \"timezoneOffset\": \"<integer>\",\n    \"year\": \"<integer>\"\n  },\n  \"programDescription\": \"<string>\",\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\",\n  \"programStatus\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "putprogrambyprogname",
			"item": [
				{
					"name": "{programName}",
					"item": [
						{
							"name": "Update Program by Program Name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var iterationData = pm.iterationData.toObject();",
											"console.log(\"i am in update program\"+pm.collectionVariables.get(\"programName\"));",
											"var iterationprogramName = iterationData.update_programName;",
											"teamName = pm.collectionVariables.get(\"teamName\");",
											"var programNumber = pm.collectionVariables.get(\"serialNumber\");",
											"if(programNumber!== undefined)",
											"{",
											"//programNumber++;",
											"var serialNumber = programNumber.toString().padStart(3,'0');",
											"pm.collectionVariables.set(\"serialNumber\",serialNumber);",
											"console.log(\"serialNumber\"+serialNumber);",
											"var updateprogramName = 'March24-'+`${teamName}-${iterationprogramName}-${serialNumber}`;",
											"pm.iterationData.set(\"update_programName\",updateprogramName);",
											"console.log(\"UpdatedValue:\"+pm.iterationData.get(\"update_programName\"));",
											"var requestbody = {",
											"    \"programDescription\" : pm.iterationData.get(\"update_programDescription\"),",
											"    \"programName\" : pm.iterationData.get(\"update_programName\"),",
											"    \"programStatus\" : pm.iterationData.get(\"update_programStatus\")",
											"};",
											"pm.request.body.update(JSON.stringify(requestbody));",
											"console.log(pm.request.body.toString());",
											"console.log(\"i am update program name*:\"+pm.collectionVariables.get(\"programName\"));",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responsedata = pm.response.json();",
											"var programName = pm.collectionVariables.get('programName');",
											"console.log(\"i am in testscript of updateprogram, collection variable is\"+programName);",
											"if(programName !== null)",
											"{",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.collectionVariables.set(\"programId\",responsedata.programId);",
											"    pm.collectionVariables.set(\"programName\",responsedata.programName);",
											"    pm.collectionVariables.set(\"programStatus\",responsedata.programStatus);",
											"});",
											"}",
											"else{",
											"    pm.test(\"Status code is 404\", function(){",
											"        pm.response.to.have.status(404);",
											"    });",
											"    postman.setNextRequest(\"Create New Batch\");",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"programDescription\": \"{{update_programDescription}}\",\n  \"programName\": \"{{update_programName}}\",\n  \"programStatus\": \"{{update_programStatus}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/program/:programName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										":programName"
									],
									"variable": [
										{
											"key": "programName",
											"value": "{{updateprogramName}}",
											"description": "(Required) programName"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"creationTime\": {\n    \"date\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"hours\": \"<integer>\",\n    \"minutes\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"nanos\": \"<integer>\",\n    \"seconds\": \"<integer>\",\n    \"time\": \"<long>\",\n    \"timezoneOffset\": \"<integer>\",\n    \"year\": \"<integer>\"\n  },\n  \"lastModTime\": {\n    \"date\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"hours\": \"<integer>\",\n    \"minutes\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"nanos\": \"<integer>\",\n    \"seconds\": \"<integer>\",\n    \"time\": \"<long>\",\n    \"timezoneOffset\": \"<integer>\",\n    \"year\": \"<integer>\"\n  },\n  \"programDescription\": \"<string>\",\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\",\n  \"programStatus\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/program/:programName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"program",
												":programName"
											],
											"variable": [
												{
													"key": "programName"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"creationTime\": {\n    \"date\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"hours\": \"<integer>\",\n    \"minutes\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"nanos\": \"<integer>\",\n    \"seconds\": \"<integer>\",\n    \"time\": \"<long>\",\n    \"timezoneOffset\": \"<integer>\",\n    \"year\": \"<integer>\"\n  },\n  \"lastModTime\": {\n    \"date\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"hours\": \"<integer>\",\n    \"minutes\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"nanos\": \"<integer>\",\n    \"seconds\": \"<integer>\",\n    \"time\": \"<long>\",\n    \"timezoneOffset\": \"<integer>\",\n    \"year\": \"<integer>\"\n  },\n  \"programDescription\": \"<string>\",\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\",\n  \"programStatus\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "putprogram",
			"item": [
				{
					"name": "{programId}",
					"item": [
						{
							"name": "Update Program by Program ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var iterationData = pm.iterationData.toObject();",
											"console.log(pm.collectionVariables.get(\"programName\"));",
											"var iterationprogramName = iterationData.update_programName;",
											"teamName = pm.collectionVariables.get(\"teamName\");",
											"var programNumber = pm.collectionVariables.get(\"serialNumber\");",
											"if(programNumber!== undefined)",
											"{",
											"//programNumber++;",
											"var serialNumber = programNumber.toString().padStart(3,'0');",
											"pm.collectionVariables.set(\"serialNumber\",serialNumber);",
											"console.log(\"serialNumber\"+serialNumber);",
											"var updateprogramName = 'March24-'+`${teamName}-${iterationprogramName}-${serialNumber}`;",
											"pm.iterationData.set(\"update_programName\",updateprogramName);",
											"console.log(\"UpdatedValue:\"+pm.iterationData.get(\"update_programName\"));",
											"var requestbody = {",
											"    \"programDescription\" : pm.iterationData.get(\"update_programDescription\"),",
											"    \"programName\" : pm.iterationData.get(\"update_programName\"),",
											"    \"programStatus\" : pm.iterationData.get(\"update_programStatus\")",
											"};",
											"pm.request.body.update(JSON.stringify(requestbody));",
											"console.log(pm.request.body.toString());",
											"console.log(pm.collectionVariables.get(\"programName\"));",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responsedata = pm.response.json();",
											"var programId = pm.collectionVariables.get('programId');",
											"if(programId !== null)",
											"{",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.collectionVariables.set(\"programId\",responsedata.programId);",
											"    pm.collectionVariables.set(\"programName\",responsedata.programName);",
											"    pm.collectionVariables.set(\"programStatus\",responsedata.programStatus);",
											"});",
											"}",
											"else{",
											"    pm.test(\"Status code is 400\", function(){",
											"        pm.response.to.have.status(400);",
											"    });",
											"    Postman.setNextRequest(\"Create New Batch\");",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"programDescription\": \"{{update_programDescription}}\",\n  \"programName\": \"{{update_programName}}\",\n  \"programStatus\": \"{{update_programStatus}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/putprogram/:programId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"putprogram",
										":programId"
									],
									"variable": [
										{
											"key": "programId",
											"value": "{{programId}}",
											"description": "(Required) programId"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"creationTime\": {\n    \"date\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"hours\": \"<integer>\",\n    \"minutes\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"nanos\": \"<integer>\",\n    \"seconds\": \"<integer>\",\n    \"time\": \"<long>\",\n    \"timezoneOffset\": \"<integer>\",\n    \"year\": \"<integer>\"\n  },\n  \"lastModTime\": {\n    \"date\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"hours\": \"<integer>\",\n    \"minutes\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"nanos\": \"<integer>\",\n    \"seconds\": \"<integer>\",\n    \"time\": \"<long>\",\n    \"timezoneOffset\": \"<integer>\",\n    \"year\": \"<integer>\"\n  },\n  \"programDescription\": \"<string>\",\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\",\n  \"programStatus\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/putprogram/:programId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"putprogram",
												":programId"
											],
											"variable": [
												{
													"key": "programId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"creationTime\": {\n    \"date\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"hours\": \"<integer>\",\n    \"minutes\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"nanos\": \"<integer>\",\n    \"seconds\": \"<integer>\",\n    \"time\": \"<long>\",\n    \"timezoneOffset\": \"<integer>\",\n    \"year\": \"<integer>\"\n  },\n  \"lastModTime\": {\n    \"date\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"hours\": \"<integer>\",\n    \"minutes\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"nanos\": \"<integer>\",\n    \"seconds\": \"<integer>\",\n    \"time\": \"<long>\",\n    \"timezoneOffset\": \"<integer>\",\n    \"year\": \"<integer>\"\n  },\n  \"programDescription\": \"<string>\",\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\",\n  \"programStatus\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "batches",
			"item": [
				{
					"name": "batchId",
					"item": [
						{
							"name": "Create New Batch",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"teamName = pm.collectionVariables.get(\"teamName\");",
											"var programNumber = pm.collectionVariables.get(\"serialNumber\");",
											"var iterationData = pm.iterationData.toObject();",
											"var programName = iterationData.programName;",
											"var batchName = iterationData.batchName;",
											"console.log(\"teamName,programName,batchName,serialNumber from file: \"+teamName+programName+batchName+serialNumber);",
											"if(programNumber== undefined || programNumber ===null) programNumber = 50;",
											"else",
											"{",
											"serialNumber = programNumber.toString().padStart(3,'0');",
											"pm.collectionVariables.set(\"serialNumber\",serialNumber);",
											"console.log(\"serialNumber\"+serialNumber);",
											"var updatebatchName = 'March24-'+`${teamName}-${programName}-${batchName}-${serialNumber}`;",
											"pm.iterationData.set(\"batchName\",updatebatchName);",
											"pm.collectionVariables.set(\"updatedbatchName\",updatebatchName);",
											"console.log(\"UpdatedbatchNameValue:\"+pm.iterationData.get(\"batchName\"));",
											"var requestbody = {",
											"\"batchDescription\": pm.iterationData.get(\"batchDescription\"),",
											"  \"batchName\": pm.iterationData.get(\"batchName\"),",
											"  \"batchNoOfClasses\": pm.iterationData.get(\"batchNoOfClasses\"),",
											"  \"batchStatus\": pm.iterationData.get(\"batchstatus\"),",
											"  \"programId\": pm.collectionVariables.get(\"programId\"),",
											"  \"programName\": pm.collectionVariables.get(\"programName\")",
											"};",
											"pm.request.body.update(JSON.stringify(requestbody));",
											"console.log(pm.request.body.toString());",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responsedata = pm.response.json();",
											"console.log(responsedata);",
											"if(responsedata.batchId !== null || responsedata.batchId !== undefined)",
											"{",
											"    pm.collectionVariables.set(\"createdbatchObject\",JSON.stringify(responsedata));",
											"    pm.collectionVariables.set(\"batchId\",responsedata.batchId);",
											"    pm.collectionVariables.set(\"batchName\",responsedata.batchName);",
											"    pm.test(\"Status code is 201\", function () {",
											"        pm.response.to.have.status(201);",
											"    });",
											"",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"batchDescription\": \"{{batchDescription}}\",\n  \"batchName\": \"{{batchName}}\",\n  \"batchNoOfClasses\": \"{{batchNoOfClasses}}\",\n  \"batchStatus\": \"{{batchstatus}}\",\n  \"programId\": \"{{programId}}\",\n  \"programName\": \"{{programName}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/batches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"batches"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batchDescription\": \"<string>\",\n  \"batchId\": \"<integer>\",\n  \"batchName\": \"<string>\",\n  \"batchNoOfClasses\": \"<integer>\",\n  \"batchStatus\": \"<string>\",\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/batches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batches"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"batchDescription\": \"<string>\",\n  \"batchId\": \"<integer>\",\n  \"batchName\": \"<string>\",\n  \"batchNoOfClasses\": \"<integer>\",\n  \"batchStatus\": \"<string>\",\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{batchId}",
					"item": [
						{
							"name": "Get Batch details by Batch Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/batches/batchId/:batchId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"batches",
										"batchId",
										":batchId"
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}",
											"description": "(Required) batchId"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/batches/batchId/:batchId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batches",
												"batchId",
												":batchId"
											],
											"variable": [
												{
													"key": "batchId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"batchDescription\": \"<string>\",\n  \"batchId\": \"<integer>\",\n  \"batchName\": \"<string>\",\n  \"batchNoOfClasses\": \"<integer>\",\n  \"batchStatus\": \"<string>\",\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "batchName",
					"item": [
						{
							"name": "{batchName}",
							"item": [
								{
									"name": "Get Batch details by Batch Name",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/batches/batchName/:batchName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batches",
												"batchName",
												":batchName"
											],
											"variable": [
												{
													"key": "batchName",
													"value": "{{updatedbatchName}}",
													"description": "(Required) batchName"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/batches/batchName/:batchName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"batches",
														"batchName",
														":batchName"
													],
													"variable": [
														{
															"key": "batchName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"batchDescription\": \"<string>\",\n    \"batchId\": \"<integer>\",\n    \"batchName\": \"<string>\",\n    \"batchNoOfClasses\": \"<integer>\",\n    \"batchStatus\": \"<string>\",\n    \"programId\": \"<long>\",\n    \"programName\": \"<string>\"\n  },\n  {\n    \"batchDescription\": \"<string>\",\n    \"batchId\": \"<integer>\",\n    \"batchName\": \"<string>\",\n    \"batchNoOfClasses\": \"<integer>\",\n    \"batchStatus\": \"<string>\",\n    \"programId\": \"<long>\",\n    \"programName\": \"<string>\"\n  }\n]"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "program",
					"item": [
						{
							"name": "{programId}",
							"item": [
								{
									"name": "Get Batch details by Program Id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/batches/program/:programId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batches",
												"program",
												":programId"
											],
											"variable": [
												{
													"key": "programId",
													"value": "{{programId}}",
													"description": "(Required) programId"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/batches/program/:programId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"batches",
														"program",
														":programId"
													],
													"variable": [
														{
															"key": "programId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"batchDescription\": \"<string>\",\n    \"batchId\": \"<integer>\",\n    \"batchName\": \"<string>\",\n    \"batchNoOfClasses\": \"<integer>\",\n    \"batchStatus\": \"<string>\",\n    \"programId\": \"<long>\",\n    \"programName\": \"<string>\"\n  },\n  {\n    \"batchDescription\": \"<string>\",\n    \"batchId\": \"<integer>\",\n    \"batchName\": \"<string>\",\n    \"batchNoOfClasses\": \"<integer>\",\n    \"batchStatus\": \"<string>\",\n    \"programId\": \"<long>\",\n    \"programName\": \"<string>\"\n  }\n]"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{batchId}",
					"item": [
						{
							"name": "Update Batch details",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"batchDescription\": \"{{update_batchDescription}}\",\n    \"batchName\": \"{{update_batchName}}\",\n    \"batchNoOfClasses\": \"{{update_batchNoOfClasses}}\",\n    \"batchStatus\": \"{{update_batchStatus}}\",\n    \"programId\": \"{{programId}}\",\n    \"programName\": \"{{programName}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/batches/:batchId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"batches",
										":batchId"
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}",
											"description": "(Required) batchId"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"batchDescription\": \"<string>\",\n  \"batchId\": \"<integer>\",\n  \"batchName\": \"<string>\",\n  \"batchNoOfClasses\": \"<integer>\",\n  \"batchStatus\": \"<string>\",\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/batches/:batchId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batches",
												":batchId"
											],
											"variable": [
												{
													"key": "batchId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"batchDescription\": \"<string>\",\n  \"batchId\": \"<integer>\",\n  \"batchName\": \"<string>\",\n  \"batchNoOfClasses\": \"<integer>\",\n  \"batchStatus\": \"<string>\",\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get All Batches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/batches?searchString={{searchString}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"batches"
							],
							"query": [
								{
									"key": "searchString",
									"value": "{{searchString}}",
									"description": "searchString"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/batches?searchString=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"batches"
									],
									"query": [
										{
											"key": "searchString",
											"value": "<string>",
											"description": "searchString"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"batchDescription\": \"<string>\",\n    \"batchId\": \"<integer>\",\n    \"batchName\": \"<string>\",\n    \"batchNoOfClasses\": \"<integer>\",\n    \"batchStatus\": \"<string>\",\n    \"programId\": \"<long>\",\n    \"programName\": \"<string>\"\n  },\n  {\n    \"batchDescription\": \"<string>\",\n    \"batchId\": \"<integer>\",\n    \"batchName\": \"<string>\",\n    \"batchNoOfClasses\": \"<integer>\",\n    \"batchStatus\": \"<string>\",\n    \"programId\": \"<long>\",\n    \"programName\": \"<string>\"\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "roles",
			"item": [
				{
					"name": "Get All roles",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"creationTime\": {\n      \"date\": \"<integer>\",\n      \"day\": \"<integer>\",\n      \"hours\": \"<integer>\",\n      \"minutes\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"nanos\": \"<integer>\",\n      \"seconds\": \"<integer>\",\n      \"time\": \"<long>\",\n      \"timezoneOffset\": \"<integer>\",\n      \"year\": \"<integer>\"\n    },\n    \"lastModTime\": {\n      \"date\": \"<integer>\",\n      \"day\": \"<integer>\",\n      \"hours\": \"<integer>\",\n      \"minutes\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"nanos\": \"<integer>\",\n      \"seconds\": \"<integer>\",\n      \"time\": \"<long>\",\n      \"timezoneOffset\": \"<integer>\",\n      \"year\": \"<integer>\"\n    },\n    \"roleDesc\": \"<string>\",\n    \"roleId\": \"<string>\",\n    \"roleName\": \"<string>\"\n  },\n  {\n    \"creationTime\": {\n      \"date\": \"<integer>\",\n      \"day\": \"<integer>\",\n      \"hours\": \"<integer>\",\n      \"minutes\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"nanos\": \"<integer>\",\n      \"seconds\": \"<integer>\",\n      \"time\": \"<long>\",\n      \"timezoneOffset\": \"<integer>\",\n      \"year\": \"<integer>\"\n    },\n    \"lastModTime\": {\n      \"date\": \"<integer>\",\n      \"day\": \"<integer>\",\n      \"hours\": \"<integer>\",\n      \"minutes\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"nanos\": \"<integer>\",\n      \"seconds\": \"<integer>\",\n      \"time\": \"<long>\",\n      \"timezoneOffset\": \"<integer>\",\n      \"year\": \"<integer>\"\n    },\n    \"roleDesc\": \"<string>\",\n    \"roleId\": \"<string>\",\n    \"roleName\": \"<string>\"\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "roleStatus",
					"item": [
						{
							"name": "Get all Users",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responsedata = pm.response.json();",
											"if(responsedata.userId !== null)",
											"{",
											"    const existingData = JSON.stringify(responsedata);",
											"    //console.log(responsedata);",
											"    // console.log(typeof existingData);",
											"    // console.log(typeof responsedata);",
											"    pm.collectionVariables.set(\"existingUsers\", existingData);",
											"    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"userComments\": \"<string>\",\n    \"userEduPg\": \"<string>\",\n    \"userEduUg\": \"<string>\",\n    \"userFirstName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userLastName\": \"<string>\",\n    \"userLinkedinUrl\": \"<string>\",\n    \"userLocation\": \"<string>\",\n    \"userLoginEmail\": \"<string>\",\n    \"userMiddleName\": \"<string>\",\n    \"userPhoneNumber\": \"<long>\",\n    \"userTimeZone\": \"<string>\",\n    \"userVisaStatus\": \"<string>\"\n  },\n  {\n    \"userComments\": \"<string>\",\n    \"userEduPg\": \"<string>\",\n    \"userEduUg\": \"<string>\",\n    \"userFirstName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userLastName\": \"<string>\",\n    \"userLinkedinUrl\": \"<string>\",\n    \"userLocation\": \"<string>\",\n    \"userLoginEmail\": \"<string>\",\n    \"userMiddleName\": \"<string>\",\n    \"userPhoneNumber\": \"<long>\",\n    \"userTimeZone\": \"<string>\",\n    \"userVisaStatus\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "Create User Login with Role",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"        var iterationData = pm.iterationData.toObject();",
											"        pm.collectionVariables.set(\"userIterationData\",JSON.stringify(iterationData));",
											"        console.log(iterationData);",
											"        emailToCheck = iterationData.userLoginEmail;",
											"        pm.collectionVariables.set(\"userLoginEmail\", emailToCheck);",
											"        var existingData = JSON.parse(pm.collectionVariables.get(\"existingUsers\"));",
											"        console.log(typeof existingData);",
											"         var existingEmails = existingData.map(function (user) {",
											"            return user.userLoginEmail;",
											"        });",
											"        pm.collectionVariables.set(\"existingEmails\", existingEmails);",
											"        var existingPhoneNumbers = existingData.map(function (user) {",
											"            return user.userPhoneNumber;",
											"        });",
											"        pm.collectionVariables.set(\"existingPhoneNumbers\", existingPhoneNumbers);",
											"       ",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"userId\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"userFirstName\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"userLastName\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"userMiddleName\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"userPhoneNumber\": {",
											"      \"type\": \"integer\"",
											"    },",
											"    \"userLocation\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"userTimeZone\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"userLinkedinUrl\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"userEduUg\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"userEduPg\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"userComments\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"userVisaStatus\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"userLoginEmail\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"userId\",",
											"    \"userFirstName\",",
											"    \"userLastName\",",
											"    \"userMiddleName\",",
											"    \"userPhoneNumber\",",
											"    \"userLocation\",",
											"    \"userTimeZone\",",
											"    \"userLinkedinUrl\",",
											"    \"userEduUg\",",
											"    \"userEduPg\",",
											"    \"userComments\",",
											"    \"userVisaStatus\",",
											"    \"userLoginEmail\"",
											"  ]",
											"}",
											"if (pm.response.text()) {",
											"        var responsedata = pm.response.json();",
											"        var iterationData = JSON.parse(pm.collectionVariables.get(\"userIterationData\"));",
											"        var userId = responsedata.userId;",
											"        console.log(\"userId:\"+ userId);",
											"        var emailToCheck = pm.collectionVariables.get(\"userLoginEmail\");",
											"        var existingEmails = pm.collectionVariables.get(\"existingEmails\");",
											"        var phoneNumbertToCheck = pm.iterationData.get(\"userPhoneNumber\");",
											"        var existingPhoneNumbers = pm.collectionVariables.get(\"existingPhoneNumbers\");",
											"        var phoneNumber_found = 0;",
											"        for (i = 0; i < existingPhoneNumbers.length; i++) {",
											"        if (existingPhoneNumbers[i] === phoneNumbertToCheck) {",
											"            pm.test(\"Status code is 400\", function () {",
											"                pm.response.to.have.status(400);",
											"            });",
											"            pm.test(\"Failed to create new User as phone number \"+`${phoneNumbertToCheck}`+\" already exists !!\", function () {",
											"                pm.expect(pm.response.text()).to.include(\"Failed to create new User as phone number \"+`${phoneNumbertToCheck}`+\" already exists !!\")",
											"            });",
											"            phoneNumber_found = 1;",
											"            postman.setNextRequest(\"Get all Active User\");",
											"            return;",
											"        }",
											"    }",
											"        var email_found = 0;",
											"        pm.collectionVariables.set(\"email_found\",\"0\");",
											"        for (i = 0; i < existingEmails.length; i++) {",
											"            if (existingEmails[i] === emailToCheck) {",
											"            ",
											"                pm.test(\"Bad Request 400\", function () {",
											"                pm.response.to.have.status(400);",
											"                });",
											"                pm.test(\"Failed to create new UserLogin as email already exists!\", function () {",
											"                pm.expect(pm.response.text()).to.include(\"Failed to create new UserLogin as email already exists!\");",
											"                });",
											"                pm.collectionVariables.set(\"email_found\",\"1\");",
											"                postman.setNextRequest(\"Get all Active User\");",
											"                email_found = 1;",
											"                return;",
											"            }",
											"        }",
											"        if(userId === null || userId === undefined)",
											"        {",
											"            pm.collectionVariables.set(\"userCreatedWithRole\",null);",
											"            function isString(value)",
											"            {",
											"                const exp = /^[a-zA-Z]+$/;",
											"                return exp.test(value);",
											"            }",
											"            if(!isString(iterationData.userFirstName))",
											"            {",
											"                pm.test(\"Bad Request 400\", function () {",
											"                    pm.response.to.have.status(400);",
											"                });",
											"                pm.test(\"userFirstName must contain two or more alphabets only\", function () {",
											"                    pm.expect(pm.response.text()).to.include(\"userFirstName must contain two or more alphabets only\");",
											"                    });",
											"            }",
											"            if(!isString(iterationData.userLastName))",
											"            {",
											"                pm.test(\"Bad Request 400\", function () {",
											"                    pm.response.to.have.status(400);",
											"                });",
											"                pm.test(\"userLastName must contain two or more alphabets only\", function () {",
											"                    pm.expect(pm.response.text()).to.include(\"userLastName must contain one or more alphabets only\");",
											"                    });",
											"            }",
											"            if(iterationData.userMiddleName === \"\")",
											"            {",
											"                pm.test(\"Bad Request 400\", function () {",
											"                    pm.response.to.have.status(400);",
											"                });",
											"                pm.test(\"userMiddleName must contain two or more alphabets only\", function () {",
											"                    pm.expect(pm.response.text()).to.include(\"userMiddleName must contain two or more alphabets only\");",
											"                    });",
											"            }",
											"            if(iterationData.userFirstName === null)",
											"            {",
											"                pm.test(\"Bad Request 400\", function () {",
											"                    pm.response.to.have.status(400);",
											"                });",
											"                pm.test(\"userFirstName Cannot be null\", function () {",
											"                    pm.expect(pm.response.text()).to.include(\"userFirstName is cannot be null\");",
											"                    });",
											"            }",
											"            if(iterationData.userLastName === null)",
											"            {",
											"                pm.test(\"Bad Request 400\", function () {",
											"                    pm.response.to.have.status(400);",
											"                });",
											"                pm.test(\"User LastName cannot be null or empty\", function () {",
											"                pm.expect(pm.response.text()).to.include(\"User Last Name is cannot be null or empty\");",
											"                });",
											"            }",
											"            if(iterationData.userPhoneNumber === null)",
											"            {",
											"                pm.test(\"Bad Request 400\", function () {",
											"                pm.response.to.have.status(400);",
											"                });",
											"            }",
											"            if(iterationData.userMiddleName === null)",
											"            {",
											"                pm.test(\"Bad Request 400\", function () {",
											"                pm.response.to.have.status(400);",
											"                });",
											"            }",
											"            postman.setNextRequest(\"Get all Active User \");",
											"        }",
											"        else",
											"        {",
											"            pm.collectionVariables.set(\"userCreatedWithRole\",userId);",
											"            pm.collectionVariables.set(\"roleId\",iterationData.roleId);",
											"            pm.test(\"SCHEMA IS VALID\",function(){",
											"            pm.expect(tv4.validate(responsedata,schema)).to.be.true;",
											"            });",
											"            pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
											"            pm.test(\"Status Line\", function () {",
											"                pm.response.to.have.status(\"Created\");",
											"            });",
											"            pm.test(\"Successful POST request\", function () {",
											"                pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
											"            });",
											"        }",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userComments\": \"{{userComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{userFirstName}}\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"{{roleId1}}\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{userLoginEmail}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{userPhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleId}}\",\n      \"userRoleStatus\": \"{{userRoleStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{userTimeZone}}\",\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/roleStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"roleStatus"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userComments\": \"<string>\",\n  \"userEduPg\": \"<string>\",\n  \"userEduUg\": \"<string>\",\n  \"userFirstName\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"userLastName\": \"<string>\",\n  \"userLinkedinUrl\": \"<string>\",\n  \"userLocation\": \"<string>\",\n  \"userLogin\": {\n    \"loginStatus\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"status\": \"<string>\",\n    \"userLoginEmail\": \"<string>\"\n  },\n  \"userMiddleName\": \"<string>\",\n  \"userPhoneNumber\": \"<long>\",\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"<string>\",\n      \"userRoleStatus\": \"<string>\"\n    },\n    {\n      \"roleId\": \"<string>\",\n      \"userRoleStatus\": \"<string>\"\n    }\n  ],\n  \"userTimeZone\": \"<string>\",\n  \"userVisaStatus\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/roleStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"roleStatus"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"userComments\": \"<string>\",\n  \"userEduPg\": \"<string>\",\n  \"userEduUg\": \"<string>\",\n  \"userFirstName\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"userLastName\": \"<string>\",\n  \"userLinkedinUrl\": \"<string>\",\n  \"userLocation\": \"<string>\",\n  \"userLoginEmail\": \"<string>\",\n  \"userMiddleName\": \"<string>\",\n  \"userPhoneNumber\": \"<long>\",\n  \"userTimeZone\": \"<string>\",\n  \"userVisaStatus\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "roleId",
					"item": [
						{
							"name": "{userId}",
							"item": [
								{
									"name": "Update User Role Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userRoleList\": [\n    \"{{update_roleId}}\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/roleId/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"roleId",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userCreatedWithRole}}",
													"description": "(Required) userId"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userRoleList\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/roleId/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"roleId",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<string>"
										}
									]
								},
								{
									"name": "Update User Role Status",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"roleId\": \"{{update_roleId}}\",\n  \"userRoleStatus\": \"{{update_userRoleStatus}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/roleStatus/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"roleStatus",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userCreatedWithRole}}",
													"description": "(Required) userId"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"roleId\": \"<string>\",\n  \"userRoleStatus\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/roleStatus/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"roleStatus",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<string>"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "activeUsers",
					"item": [
						{
							"name": "Get all Active User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/activeUsers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"activeUsers"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/activeUsers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"activeUsers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"userComments\": \"<string>\",\n    \"userEduPg\": \"<string>\",\n    \"userEduUg\": \"<string>\",\n    \"userFirstName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userLastName\": \"<string>\",\n    \"userLinkedinUrl\": \"<string>\",\n    \"userLocation\": \"<string>\",\n    \"userMiddleName\": \"<string>\",\n    \"userPhoneNumber\": \"<long>\",\n    \"userTimeZone\": \"<string>\",\n    \"userVisaStatus\": \"<string>\"\n  },\n  {\n    \"userComments\": \"<string>\",\n    \"userEduPg\": \"<string>\",\n    \"userEduUg\": \"<string>\",\n    \"userFirstName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userLastName\": \"<string>\",\n    \"userLinkedinUrl\": \"<string>\",\n    \"userLocation\": \"<string>\",\n    \"userMiddleName\": \"<string>\",\n    \"userPhoneNumber\": \"<long>\",\n    \"userTimeZone\": \"<string>\",\n    \"userVisaStatus\": \"<string>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "byStatus",
					"item": [
						{
							"name": "Gets count of active and inactive users. Unless role id is specified, gets all type of users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/byStatus?id={{roleId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"byStatus"
									],
									"query": [
										{
											"key": "id",
											"value": "{{roleId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/byStatus?id=all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"byStatus"
											],
											"query": [
												{
													"key": "id",
													"value": "all",
													"description": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"count\": \"<long>\",\n    \"status\": \"<string>\"\n  },\n  {\n    \"count\": \"<long>\",\n    \"status\": \"<string>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "roleProgramBatchStatus",
					"item": [
						{
							"name": "{userId}",
							"item": [
								{
									"name": "Update User Role Program Batch status",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"programId\": \"{{programId}}\",\n  \"roleId\": \"{{update_roleId}}\",\n  \"userId\": \"{{userCreatedWithRole}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\": \"{{batchId}}\",\n      \"userRoleProgramBatchStatus\": \"{{batchstatus}}\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/roleProgramBatchStatus/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"roleProgramBatchStatus",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userCreatedWithRole}}",
													"description": "(Required) userId"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"programId\": \"<long>\",\n  \"roleId\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\": \"<integer>\",\n      \"userRoleProgramBatchStatus\": \"<string>\"\n    },\n    {\n      \"batchId\": \"<integer>\",\n      \"userRoleProgramBatchStatus\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/roleProgramBatchStatus/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"roleProgramBatchStatus",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"success\": \"<boolean>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "programBatch",
					"item": [
						{
							"name": "{batchId}",
							"item": [
								{
									"name": "Get User by Program Batches",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/programBatch/:batchId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"programBatch",
												":batchId"
											],
											"variable": [
												{
													"key": "batchId",
													"value": "{{batchId}}",
													"description": "(Required) batchId"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/programBatch/:batchId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"programBatch",
														":batchId"
													],
													"variable": [
														{
															"key": "batchId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"userComments\": \"<string>\",\n    \"userEduPg\": \"<string>\",\n    \"userEduUg\": \"<string>\",\n    \"userFirstName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userLastName\": \"<string>\",\n    \"userLinkedinUrl\": \"<string>\",\n    \"userLocation\": \"<string>\",\n    \"userLoginEmail\": \"<string>\",\n    \"userMiddleName\": \"<string>\",\n    \"userPhoneNumber\": \"<long>\",\n    \"userTimeZone\": \"<string>\",\n    \"userVisaStatus\": \"<string>\"\n  },\n  {\n    \"userComments\": \"<string>\",\n    \"userEduPg\": \"<string>\",\n    \"userEduUg\": \"<string>\",\n    \"userFirstName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userLastName\": \"<string>\",\n    \"userLinkedinUrl\": \"<string>\",\n    \"userLocation\": \"<string>\",\n    \"userLoginEmail\": \"<string>\",\n    \"userMiddleName\": \"<string>\",\n    \"userPhoneNumber\": \"<long>\",\n    \"userTimeZone\": \"<string>\",\n    \"userVisaStatus\": \"<string>\"\n  }\n]"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "programs",
					"item": [
						{
							"name": "{programId}",
							"item": [
								{
									"name": "Get User for Program",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/programs/:programId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"programs",
												":programId"
											],
											"variable": [
												{
													"key": "programId",
													"value": "{{programId}}",
													"description": "(Required) programId"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/programs/:programId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"programs",
														":programId"
													],
													"variable": [
														{
															"key": "programId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"userComments\": \"<string>\",\n    \"userEduPg\": \"<string>\",\n    \"userEduUg\": \"<string>\",\n    \"userFirstName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userLastName\": \"<string>\",\n    \"userLinkedinUrl\": \"<string>\",\n    \"userLocation\": \"<string>\",\n    \"userLoginEmail\": \"<string>\",\n    \"userMiddleName\": \"<string>\",\n    \"userPhoneNumber\": \"<long>\",\n    \"userTimeZone\": \"<string>\",\n    \"userVisaStatus\": \"<string>\"\n  },\n  {\n    \"userComments\": \"<string>\",\n    \"userEduPg\": \"<string>\",\n    \"userEduUg\": \"<string>\",\n    \"userFirstName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userLastName\": \"<string>\",\n    \"userLinkedinUrl\": \"<string>\",\n    \"userLocation\": \"<string>\",\n    \"userLoginEmail\": \"<string>\",\n    \"userMiddleName\": \"<string>\",\n    \"userPhoneNumber\": \"<long>\",\n    \"userTimeZone\": \"<string>\",\n    \"userVisaStatus\": \"<string>\"\n  }\n]"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get User Information by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responsedata = pm.response.json();",
											"",
											"if(responsedata.userId !== null || responsedata.userId !== undefined)",
											"{",
											"    pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    });",
											"    pm.collectionVariables.set(\"roleId\",responsedata.roleId);",
											"}",
											"else{",
											"    pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{userCreatedWithRole}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"body\": {},\n  \"statusCode\": \"102 PROCESSING\",\n  \"statusCodeValue\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "roles",
					"item": [
						{
							"name": "Get User by RoleID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/roles/:roleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"roles",
										":roleId"
									],
									"variable": [
										{
											"key": "roleId",
											"value": "{{roleId}}",
											"description": "(Required) roleId"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"userComments\": \"<string>\",\n    \"userEduPg\": \"<string>\",\n    \"userEduUg\": \"<string>\",\n    \"userFirstName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userLastName\": \"<string>\",\n    \"userLinkedinUrl\": \"<string>\",\n    \"userLocation\": \"<string>\",\n    \"userLoginEmail\": \"<string>\",\n    \"userMiddleName\": \"<string>\",\n    \"userPhoneNumber\": \"<long>\",\n    \"userTimeZone\": \"<string>\",\n    \"userVisaStatus\": \"<string>\"\n  },\n  {\n    \"userComments\": \"<string>\",\n    \"userEduPg\": \"<string>\",\n    \"userEduUg\": \"<string>\",\n    \"userFirstName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userLastName\": \"<string>\",\n    \"userLinkedinUrl\": \"<string>\",\n    \"userLocation\": \"<string>\",\n    \"userLoginEmail\": \"<string>\",\n    \"userMiddleName\": \"<string>\",\n    \"userPhoneNumber\": \"<long>\",\n    \"userTimeZone\": \"<string>\",\n    \"userVisaStatus\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "getAllUsersWithRoles",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"roles"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"roles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"role\": {\n      \"creationTime\": {\n        \"date\": \"<integer>\",\n        \"day\": \"<integer>\",\n        \"hours\": \"<integer>\",\n        \"minutes\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"nanos\": \"<integer>\",\n        \"seconds\": \"<integer>\",\n        \"time\": \"<long>\",\n        \"timezoneOffset\": \"<integer>\",\n        \"year\": \"<integer>\"\n      },\n      \"lastModTime\": {\n        \"date\": \"<integer>\",\n        \"day\": \"<integer>\",\n        \"hours\": \"<integer>\",\n        \"minutes\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"nanos\": \"<integer>\",\n        \"seconds\": \"<integer>\",\n        \"time\": \"<long>\",\n        \"timezoneOffset\": \"<integer>\",\n        \"year\": \"<integer>\"\n      },\n      \"roleDesc\": \"<string>\",\n      \"roleId\": \"<string>\",\n      \"roleName\": \"<string>\"\n    },\n    \"user\": {\n      \"userComments\": \"<string>\",\n      \"userEduPg\": \"<string>\",\n      \"userEduUg\": \"<string>\",\n      \"userFirstName\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"userLastName\": \"<string>\",\n      \"userLinkedinUrl\": \"<string>\",\n      \"userLocation\": \"<string>\",\n      \"userMiddleName\": \"<string>\",\n      \"userPhoneNumber\": \"<long>\",\n      \"userTimeZone\": \"<string>\",\n      \"userVisaStatus\": \"<string>\"\n    },\n    \"userId\": \"<string>\",\n    \"userRoleId\": \"<long>\",\n    \"userRoleStatus\": \"<string>\"\n  },\n  {\n    \"role\": {\n      \"creationTime\": {\n        \"date\": \"<integer>\",\n        \"day\": \"<integer>\",\n        \"hours\": \"<integer>\",\n        \"minutes\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"nanos\": \"<integer>\",\n        \"seconds\": \"<integer>\",\n        \"time\": \"<long>\",\n        \"timezoneOffset\": \"<integer>\",\n        \"year\": \"<integer>\"\n      },\n      \"lastModTime\": {\n        \"date\": \"<integer>\",\n        \"day\": \"<integer>\",\n        \"hours\": \"<integer>\",\n        \"minutes\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"nanos\": \"<integer>\",\n        \"seconds\": \"<integer>\",\n        \"time\": \"<long>\",\n        \"timezoneOffset\": \"<integer>\",\n        \"year\": \"<integer>\"\n      },\n      \"roleDesc\": \"<string>\",\n      \"roleId\": \"<string>\",\n      \"roleName\": \"<string>\"\n    },\n    \"user\": {\n      \"userComments\": \"<string>\",\n      \"userEduPg\": \"<string>\",\n      \"userEduUg\": \"<string>\",\n      \"userFirstName\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"userLastName\": \"<string>\",\n      \"userLinkedinUrl\": \"<string>\",\n      \"userLocation\": \"<string>\",\n      \"userMiddleName\": \"<string>\",\n      \"userPhoneNumber\": \"<long>\",\n      \"userTimeZone\": \"<string>\",\n      \"userVisaStatus\": \"<string>\"\n    },\n    \"userId\": \"<string>\",\n    \"userRoleId\": \"<long>\",\n    \"userRoleStatus\": \"<string>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "userLogin",
					"item": [
						{
							"name": "{userId}",
							"item": [
								{
									"name": "Update User Login Status",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"loginStatus\": \"{{update_loginStatus}}\",\n  \"password\": \"{{update_password}}\",\n  \"roleIds\": [\n    \"{{update_roleIds}}\"\n  ],\n  \"status\": \"{{update_status}}\",\n  \"userLoginEmail\": \"{{update_userLoginEmail}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/userLogin/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"userLogin",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userCreatedWithRole}}",
													"description": "(Required) userId"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"loginStatus\": \"<string>\",\n  \"password\": \"<string>\",\n  \"roleIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"status\": \"<string>\",\n  \"userLoginEmail\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/userLogin/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"userLogin",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<string>"
										}
									]
								},
								{
									"name": "Get Assigned Program/Batch(es) of All Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userRoleProgramBatchMap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRoleProgramBatchMap"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/userRoleProgramBatchMap",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRoleProgramBatchMap"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"batchId\": \"<integer>\",\n    \"programId\": \"<long>\",\n    \"roleId\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userRoleProgramBatchStatus\": \"<string>\"\n  },\n  {\n    \"batchId\": \"<integer>\",\n    \"programId\": \"<long>\",\n    \"roleId\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userRoleProgramBatchStatus\": \"<string>\"\n  }\n]"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{userId}",
					"item": [
						{
							"name": "Update User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"//status line",
											"if(pm.response.code==200){",
											"pm.test(\"status line \", function () {",
											"    pm.expect(pm.response.status).to.include(\"OK\");",
											"   });",
											"   ",
											"",
											"//Validate data",
											"",
											"",
											"pm.test(\"Validate data\", function() {",
											"    pm.response.to.have.jsonBody();",
											"    pm.response.to.have.jsonBody('userComments', pm.iterationData.get(\"Update_userComments\"));",
											"    pm.response.to.have.jsonBody('userEduPg', pm.iterationData.get(\"Update_userEduPg\"));",
											"    pm.response.to.have.jsonBody('userEduUg', pm.iterationData.get(\"Update_userEduUg\"));",
											"    pm.response.to.have.jsonBody('userFirstName', pm.iterationData.get(\"Update_userFirstName\"));",
											"    pm.response.to.have.jsonBody('userLastName', pm.iterationData.get(\"Update_userLastName\"));",
											"    pm.response.to.have.jsonBody('userLinkedinUrl', pm.iterationData.get(\"Update_userLinkedinUrl\"));",
											"    pm.response.to.have.jsonBody('userLocation', pm.iterationData.get(\"Update_userLocation\"));",
											"    pm.response.to.have.jsonBody('userLoginEmail', pm.iterationData.get(\"Update_userLoginEmail\"));",
											"    pm.response.to.have.jsonBody('userMiddleName', pm.iterationData.get(\"Update_userMiddleName\"));",
											"    pm.response.to.have.jsonBody('userPhoneNumber', pm.iterationData.get(\"Update_userPhoneNumber\"));",
											"    pm.response.to.have.jsonBody('userTimeZone', pm.iterationData.get(\"Update_userTimeZone\"));",
											"    pm.response.to.have.jsonBody('userVisaStatus', pm.iterationData.get(\"Update_userVisaStatus\"));",
											"});",
											"",
											"pm.test(\"Response body is valid\", function() {",
											"    var responseBody = pm.response.json();",
											"    pm.expect(responseBody.userComments).to.equal(pm.iterationData.get(\"Update_userComments\"));",
											"    pm.expect(responseBody.userEduPg).to.equal(pm.iterationData.get(\"Update_userEduPg\"));",
											"    pm.expect(responseBody.userEduUg).to.equal(pm.iterationData.get(\"Update_userEduUg\"));",
											"    pm.expect(responseBody.userFirstName).to.equal(pm.iterationData.get(\"Update_userFirstName\"));",
											"    pm.expect(responseBody.userLastName).to.equal(pm.iterationData.get(\"Update_userLastName\"));",
											"    pm.expect(responseBody.userLinkedinUrl).to.equal(pm.iterationData.get(\"Update_userLinkedinUrl\"));",
											"    pm.expect(responseBody.userLocation).to.equal(pm.iterationData.get(\"Update_userLocation\"));",
											"    pm.expect(responseBody.userLoginEmail).to.equal(pm.iterationData.get(\"Update_userLoginEmail\"));",
											"    pm.expect(responseBody.userMiddleName).to.equal(pm.iterationData.get(\"Update_userMiddleName\"));",
											"    pm.expect(responseBody.userPhoneNumber).to.equal(pm.iterationData.get(\"Update_userPhoneNumber\"));",
											"    pm.expect(responseBody.userTimeZone).to.equal(pm.iterationData.get(\"Update_userTimeZone\"));",
											"    pm.expect(responseBody.userVisaStatus).to.equal(pm.iterationData.get(\"Update_userVisaStatus\"));",
											"});",
											"",
											"",
											"    pm.test(\"Content-Type should be application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
											"});",
											"// //Schema validation",
											"const schema = {",
											"               \"type\": \"object\",",
											"            \"additionalProperties\": false,",
											"            \"properties\": {",
											"                \"userComments\": {\"type\": \"string\"},",
											"                \"userEduPg\": {\"type\": \"string\"},",
											"                \"userEduUg\": {\"type\": \"string\" },",
											"                \"userFirstName\": {\"type\": \"string\"},",
											"                \"userId\": {\"type\": \"string\"},",
											"                \"userLastName\": {\"type\": \"string\"},",
											"                \"userLinkedinUrl\": {\"type\": \"string\"},",
											"                \"userLocation\": {\"type\": \"string\"},",
											"                \"userLoginEmail\": {\"type\": \"string\"},",
											"                \"userMiddleName\": {\"type\": \"string\"},",
											"                \"userPhoneNumber\": {\"type\": \"integer\"},",
											"                \"userTimeZone\": {\"type\": \"string\"},",
											"                \"userVisaStatus\": {\"type\": \"string\"",
											"                }",
											"            },",
											"            \"required\": [\"userComments\",\"userEduPg\",\"userEduUg\",\"userFirstName\",",
											"                \"userId\",\"userLastName\",\"userLinkedinUrl\",\"userLocation\",",
											"                \"userLoginEmail\",\"userMiddleName\",\"userPhoneNumber\",\"userTimeZone\",",
											"                \"userVisaStatus\"],",
											"            ",
											"        }   ",
											"    ",
											" pm.test('Validate schema',()=>{",
											"        pm.response.to.have.jsonSchema(schema);",
											"    });",
											"     ",
											"",
											"};",
											" if(pm.response.code==400 || pm.response.code==409){",
											"pm.test(\"Validate Response Body\", function () {",
											"   var  responseBody = pm.response.json();",
											"    pm.expect(responseBody.status).to.eql(pm.iterationData.get(\"Bad Request\"));",
											"    pm.expect(responseBody.message).to.eql(pm.iterationData.get(\"Conflict\"));",
											"});",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userComments\": \"{{Update_userComments}}\",\n  \"userEduPg\": \"{{Update_userEduPg}}\",\n  \"userEduUg\": \"{{Update_userEduUg}}\",\n  \"userFirstName\": \"{{Update_userFirstName}}\",\n  \"userId\": \"{{userCreatedWithRole}}\",\n  \"userLastName\": \"{{Update_userLastName}}\",\n  \"userLinkedinUrl\": \"{{Update_userLinkedinUrl}}\",\n  \"userLocation\": \"{{Update_userLocation}}\",\n  \"userLoginEmail\": \"{{Update_userLoginEmail}}\",\n  \"userMiddleName\": \"{{Update_userMiddleName}}\",\n  \"userPhoneNumber\": \"{{Update_userPhoneNumber}}\",\n  \"userTimeZone\": \"{{Update_userTimeZone}}\",\n  \"userVisaStatus\": \"{{Update_userVisaStatus}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userCreatedWithRole}}",
											"description": "(Required) userId"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userComments\": \"<string>\",\n  \"userEduPg\": \"<string>\",\n  \"userEduUg\": \"<string>\",\n  \"userFirstName\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"userLastName\": \"<string>\",\n  \"userLinkedinUrl\": \"<string>\",\n  \"userLocation\": \"<string>\",\n  \"userLoginEmail\": \"<string>\",\n  \"userMiddleName\": \"<string>\",\n  \"userPhoneNumber\": \"<long>\",\n  \"userTimeZone\": \"<string>\",\n  \"userVisaStatus\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"userComments\": \"<string>\",\n  \"userEduPg\": \"<string>\",\n  \"userEduUg\": \"<string>\",\n  \"userFirstName\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"userLastName\": \"<string>\",\n  \"userLinkedinUrl\": \"<string>\",\n  \"userLocation\": \"<string>\",\n  \"userLoginEmail\": \"<string>\",\n  \"userMiddleName\": \"<string>\",\n  \"userPhoneNumber\": \"<long>\",\n  \"userTimeZone\": \"<string>\",\n  \"userVisaStatus\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "userRoleProgramBatchMap",
			"item": [
				{
					"name": "{userId}",
					"item": [
						{
							"name": "Get Assigned Program/Batch of a User By User Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userRoleProgramBatchMap/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userRoleProgramBatchMap",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "U1231",
											"description": "(Required) userId"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userRoleProgramBatchMap/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRoleProgramBatchMap",
												":userId"
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"batchId\": \"<integer>\",\n    \"programId\": \"<long>\",\n    \"roleId\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userRoleProgramBatchStatus\": \"<string>\"\n  },\n  {\n    \"batchId\": \"<integer>\",\n    \"programId\": \"<long>\",\n    \"roleId\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"userRoleProgramBatchStatus\": \"<string>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Delete existing Batch",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/batches/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"batches",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{batchId}}",
									"description": "(Required) id"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/batches/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"batches",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "<string>"
						}
					]
				},
				{
					"name": "Delete Program by Program ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deletebyprogid/:programId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deletebyprogid",
								":programId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "{{programId}}",
									"description": "(Required) programId"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deletebyprogid/:programId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deletebyprogid",
										":programId"
									],
									"variable": [
										{
											"key": "programId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "<string>"
						}
					]
				},
				{
					"name": "Delete Program by Program Name",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deletebyprogname/:programName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deletebyprogname",
								":programName"
							],
							"variable": [
								{
									"key": "programName",
									"value": "{{programName}}",
									"description": "(Required) programName"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deletebyprogname/:programName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deletebyprogname",
										":programName"
									],
									"variable": [
										{
											"key": "programName"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Delete All Programs/Batches assigned to the User By UserId",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/userRoleProgramBatchMap/deleteAll/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userRoleProgramBatchMap",
								"deleteAll",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userCreatedWithRole}}",
									"description": "(Required) userId"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userRoleProgramBatchMap/deleteAll/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userRoleProgramBatchMap",
										"deleteAll",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"success\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// var responsedata =pm.response.json();",
									"// var userid = pm.collectionVariables.get(\"userCreatedWithRole\");",
									"// if(userid === null || userid === undefined)",
									"// {",
									"//     pm.test(\"Bad Request 400\", function () {",
									"//                     pm.response.to.have.status(400);",
									"//                 });                ",
									"// }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userCreatedWithRole}}",
									"description": "(Required) userId"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "<string>"
						}
					]
				}
			]
		},
		{
			"name": "v2",
			"item": [
				{
					"name": "users",
					"item": [
						{
							"name": "Get all Users with Facets/Filters",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"users"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"facets\": {\n    \"facetedFields\": [\n      {\n        \"displayName\": \"<string>\",\n        \"filterValues\": [\n          {\n            \"count\": \"<integer>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"count\": \"<integer>\",\n            \"name\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"displayName\": \"<string>\",\n        \"filterValues\": [\n          {\n            \"count\": \"<integer>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"count\": \"<integer>\",\n            \"name\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"users\": [\n    {\n      \"userComments\": \"<string>\",\n      \"userEduPg\": \"<string>\",\n      \"userEduUg\": \"<string>\",\n      \"userFirstName\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"userLastName\": \"<string>\",\n      \"userLinkedinUrl\": \"<string>\",\n      \"userLocation\": \"<string>\",\n      \"userLoginEmail\": \"<string>\",\n      \"userMiddleName\": \"<string>\",\n      \"userPhoneNumber\": \"<long>\",\n      \"userTimeZone\": \"<string>\",\n      \"userVisaStatus\": \"<string>\"\n    },\n    {\n      \"userComments\": \"<string>\",\n      \"userEduPg\": \"<string>\",\n      \"userEduUg\": \"<string>\",\n      \"userFirstName\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"userLastName\": \"<string>\",\n      \"userLinkedinUrl\": \"<string>\",\n      \"userLocation\": \"<string>\",\n      \"userLoginEmail\": \"<string>\",\n      \"userMiddleName\": \"<string>\",\n      \"userPhoneNumber\": \"<long>\",\n      \"userTimeZone\": \"<string>\",\n      \"userVisaStatus\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "logoutlms",
			"item": [
				{
					"name": "User log out",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/logoutlms",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logoutlms"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logoutlms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logoutlms"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "<string>"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{Token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "lms-marchapi-hackathon-a258d2bbd43b.herokuapp.com/lms"
		},
		{
			"key": "teamName",
			"value": "DigitalDragons",
			"type": "string"
		},
		{
			"key": "serialNumber",
			"value": "000"
		},
		{
			"key": "userCreatedWithRole",
			"value": ""
		},
		{
			"key": "roleId",
			"value": ""
		},
		{
			"key": "userIterationData",
			"value": ""
		},
		{
			"key": "programId",
			"value": ""
		},
		{
			"key": "programName",
			"value": ""
		},
		{
			"key": "programStatus",
			"value": ""
		},
		{
			"key": "createdbatchObject",
			"value": ""
		},
		{
			"key": "batchId",
			"value": ""
		},
		{
			"key": "batchName",
			"value": ""
		},
		{
			"key": "userLoginEmail",
			"value": ""
		},
		{
			"key": "existingUsers",
			"value": ""
		},
		{
			"key": "updateprogramName",
			"value": ""
		},
		{
			"key": "existingEmails",
			"value": ""
		},
		{
			"key": "existingPhoneNumbers",
			"value": ""
		},
		{
			"key": "email_found",
			"value": ""
		},
		{
			"key": "updatedbatchName",
			"value": ""
		},
		{
			"key": "update_programName",
			"value": ""
		},
		{
			"key": "programDescription",
			"value": "",
			"type": "string"
		},
		{
			"key": "searchString",
			"value": "",
			"type": "string"
		}
	]
}